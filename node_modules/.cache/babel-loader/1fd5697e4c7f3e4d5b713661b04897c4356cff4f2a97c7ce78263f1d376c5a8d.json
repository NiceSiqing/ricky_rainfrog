{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import Navbar from'./components/Navbar';import Home from'./pages/Home';import Dialog from'./pages/Dialog';import Cartoon from'./pages/Cartoon';import Shop from'./pages/Shop';import'./styles/App.css';import frog from'../src/assets/background/frog.jpg';import christmas from'../src/assets/background/christmas.jpg';import halloween from'../src/assets/background/halloween.jpg';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[theme,setTheme]=useState('frog');// Default theme\n// Function to handle theme changes\nconst handleThemeChange=newTheme=>{setTheme(newTheme);// Update theme state\nconst background={frog,christmas,halloween}[newTheme];// Update global background styles\ndocument.body.style.backgroundImage=`url(${background})`;document.body.style.backgroundSize='cover';document.body.style.backgroundRepeat='no-repeat';document.body.style.backgroundAttachment='fixed';};// Set the default theme when the app loads\nuseEffect(()=>{handleThemeChange('frog');},[]);return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{onThemeChange:handleThemeChange}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dialog\",element:/*#__PURE__*/_jsx(Dialog,{})}),/*#__PURE__*/_jsx(Route,{path:\"/cartoon\",element:/*#__PURE__*/_jsx(Cartoon,{})}),/*#__PURE__*/_jsx(Route,{path:\"/shop\",element:/*#__PURE__*/_jsx(Shop,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Navbar","Home","Dialog","Cartoon","Shop","frog","christmas","halloween","jsx","_jsx","jsxs","_jsxs","App","theme","setTheme","handleThemeChange","newTheme","background","document","body","style","backgroundImage","backgroundSize","backgroundRepeat","backgroundAttachment","children","onThemeChange","path","element","to"],"sources":["C:/Users/six18004/Desktop/ricky_rainfrog/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './pages/Home';\r\nimport Dialog from './pages/Dialog';\r\nimport Cartoon from './pages/Cartoon';\r\nimport Shop from './pages/Shop';\r\nimport './styles/App.css';\r\nimport frog from '../src/assets/background/frog.jpg';\r\nimport christmas from '../src/assets/background/christmas.jpg';\r\nimport halloween from '../src/assets/background/halloween.jpg';\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState('frog'); // Default theme\r\n\r\n  // Function to handle theme changes\r\n  const handleThemeChange = (newTheme) => {\r\n    setTheme(newTheme); // Update theme state\r\n    const background = {\r\n      frog,\r\n      christmas,\r\n      halloween,\r\n    }[newTheme];\r\n\r\n    // Update global background styles\r\n    document.body.style.backgroundImage = `url(${background})`;\r\n    document.body.style.backgroundSize = 'cover';\r\n    document.body.style.backgroundRepeat = 'no-repeat';\r\n    document.body.style.backgroundAttachment = 'fixed';\r\n  };\r\n\r\n  // Set the default theme when the app loads\r\n  useEffect(() => {\r\n    handleThemeChange('frog');\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      {/* Navigation bar */}\r\n      <Navbar onThemeChange={handleThemeChange} />\r\n      <Routes>\r\n        {/* Route for the Home page */}\r\n        <Route path=\"/\" element={<Home />} />\r\n        {/* Route for the Dialog page */}\r\n        <Route path=\"/dialog\" element={<Dialog />} />\r\n        {/* Route for the Cartoon page */}\r\n        <Route path=\"/cartoon\" element={<Cartoon />} />\r\n        {/* Route for the Shop page */}\r\n        <Route path=\"/shop\" element={<Shop />} />\r\n        {/* Fallback route for unknown paths */}\r\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,IAAI,KAAM,cAAc,CAC/B,MAAO,CAAAC,MAAM,KAAM,gBAAgB,CACnC,MAAO,CAAAC,OAAO,KAAM,iBAAiB,CACrC,MAAO,CAAAC,IAAI,KAAM,cAAc,CAC/B,MAAO,kBAAkB,CACzB,MAAO,CAAAC,IAAI,KAAM,mCAAmC,CACpD,MAAO,CAAAC,SAAS,KAAM,wCAAwC,CAC9D,MAAO,CAAAC,SAAS,KAAM,wCAAwC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/D,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGrB,QAAQ,CAAC,MAAM,CAAC,CAAE;AAE5C;AACA,KAAM,CAAAsB,iBAAiB,CAAIC,QAAQ,EAAK,CACtCF,QAAQ,CAACE,QAAQ,CAAC,CAAE;AACpB,KAAM,CAAAC,UAAU,CAAG,CACjBZ,IAAI,CACJC,SAAS,CACTC,SACF,CAAC,CAACS,QAAQ,CAAC,CAEX;AACAE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAOJ,UAAU,GAAG,CAC1DC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,cAAc,CAAG,OAAO,CAC5CJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACG,gBAAgB,CAAG,WAAW,CAClDL,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACI,oBAAoB,CAAG,OAAO,CACpD,CAAC,CAED;AACA9B,SAAS,CAAC,IAAM,CACdqB,iBAAiB,CAAC,MAAM,CAAC,CAC3B,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEJ,KAAA,CAACf,MAAM,EAAA6B,QAAA,eAELhB,IAAA,CAACT,MAAM,EAAC0B,aAAa,CAAEX,iBAAkB,CAAE,CAAC,cAC5CJ,KAAA,CAACd,MAAM,EAAA4B,QAAA,eAELhB,IAAA,CAACX,KAAK,EAAC6B,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEnB,IAAA,CAACR,IAAI,GAAE,CAAE,CAAE,CAAC,cAErCQ,IAAA,CAACX,KAAK,EAAC6B,IAAI,CAAC,SAAS,CAACC,OAAO,cAAEnB,IAAA,CAACP,MAAM,GAAE,CAAE,CAAE,CAAC,cAE7CO,IAAA,CAACX,KAAK,EAAC6B,IAAI,CAAC,UAAU,CAACC,OAAO,cAAEnB,IAAA,CAACN,OAAO,GAAE,CAAE,CAAE,CAAC,cAE/CM,IAAA,CAACX,KAAK,EAAC6B,IAAI,CAAC,OAAO,CAACC,OAAO,cAAEnB,IAAA,CAACL,IAAI,GAAE,CAAE,CAAE,CAAC,cAEzCK,IAAA,CAACX,KAAK,EAAC6B,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEnB,IAAA,CAACV,QAAQ,EAAC8B,EAAE,CAAC,GAAG,CAAE,CAAE,CAAE,CAAC,EAC1C,CAAC,EACH,CAAC,CAEb,CAEA,cAAe,CAAAjB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}